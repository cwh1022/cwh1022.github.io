[{"id":"d1f83b1c9dbba0efef7b237d0125d56c","title":"eclipse安装activiti插件","content":"前言  网上搜索到的安装教程都不能用了，一直安装失败，想想也就放弃了，因为IDEA插件也能凑合，但是某些特定场景，只能用activiti插件去使用。\n安装过程\nHelp -&gt; Install New Software…\n添加插件\nName: Activiti BPMN 2.0 designerLocation: https://www.activiti.org/designer/update/\n后面与网络上的其他教程一样\n\n总结之前之所以安装失败，是因为所有人写的Location都是http的，但是其实官网已经变成https了，导致我一直没安装上。\n","slug":"eclipse安装activiti插件","date":"2024-09-29T02:24:04.000Z","categories_index":"","tags_index":"Eclipse","author_index":"Connor Chen"},{"id":"8f479e832ec9e5bb157e95fd7bbf8907","title":"html+css学习笔记","content":"HTML1. html文件结构&lt;html&gt;&lt;&#x2F;html&gt;&lt;head&gt;&lt;&#x2F;head&gt;\nhead是网页的头部，head中的内容不会在网页中直接出现，主要用来帮助浏览器或搜索引擎来解析网页\n&lt;meta charset&#x3D;”UTF-8”&gt;\n可以通过meta标签设置网页的字符集，避免乱码问题\n\n\n\n&lt;body&gt;&lt;&#x2F;body&gt;\n属性： 在标签中设置属性，属性是一个名值对\n\n2. 实体\n在网页中编写的多个空格默认情况会自动被浏览器解析为一个空格，因此需要一些特殊的字符串来表示\n实体语法： &amp;entity_name;\n例如：\n &amp;nbsp; 空格\n&gt; &amp;gt; 大于号\n&lt; &amp;lt; 小于号\n&copy; &amp;copy; 版权符号\n\n\n\n3. meta标签\n主要设置网页的一些元数据，元数据不是给用户看的，是给浏览器看的\n常用属性:\ncharset 指定网页的字符集\nname 指定的数据的名称\ncontent 指定的数据的内容\n\n\n&lt;meta name=&quot;keywords&quot; content=&quot;HTML5,前端,CSS&quot;&gt;\nkeywords： 表示网站的关键字\n\n\n&lt;meta name=&quot;description&quot; content=&quot;京东JD.COM-专业的综合网上购物商城，为您提供正品低价的购物选择、优质便捷的服务体验。商品来自全球数十万品牌商家，囊括家电、手机、电脑、服装、居家、母婴、美妆、个护、食品、生鲜等丰富品类，满足各种购物需求。&quot;/&gt;\ndescription: 网站的描述会显示在搜索引擎的搜索的结果中\n\n\n\n4. 语义化标签\n在网页中，HTML专门用来负责网页的结构，所以在使用HTML标签的时候，应该关注的是标签的语义，而不是他的样式\n标题标签，h1h6 一共有六级标题，h1最重要，h6最不重要，h1在网页中的重要性仅次于title标签，一般情况下，一个页面中只会有一个h1，一般情况下标题标签只会使用h1h3\n\n123456&lt;h1&gt;一级标题&lt;/h1&gt;&lt;h2&gt;二级标题&lt;/h2&gt;&lt;h3&gt;三级标题&lt;/h3&gt;&lt;h4&gt;四级标题&lt;/h4&gt;&lt;h5&gt;五级标题&lt;/h5&gt;&lt;h6&gt;六级标题&lt;/h6&gt;\n\n\n块元素\n在页面中独占一行的元素称为块元素（block element）\n\n\np标签表示页面中一个段落\np标签也是个块元素\n\n\n\n1&lt;p&gt;p标签表示页面中一个段落&lt;/p&gt;\n\n\nhgroup标签用来为标题分组，可以将一组相关的标题同时放入到hgroup\n\n12345&lt;hgroup&gt;    &lt;h1&gt;Welcome to my WWF&lt;/h1&gt;    &lt;h2&gt;For a living planet&lt;/h2&gt;&lt;/hgroup&gt;\n\n\nem标签用于表示语音语调的加重\n\n1&lt;p&gt;今天天气&lt;em&gt;真&lt;/em&gt;不错&lt;/p&gt;\n\n\n在页面中不会独占一行的元素称为行内元素（inline element）\nstrong标签： 加粗\n\n1&lt;strong&gt;加粗&lt;/strong&gt;\n\n\nblockquote标签： 表示一个长引用，一般常见于引用别人的话\nq标签： 表示一个段引用，会自带双引号\nbr标签： 表示换行\n布局标签（结构化语义标签）\n&lt;article&gt;  标记定义一篇文章\n&lt;header&gt;  标记定义一个页面或一个区域的头部\n&lt;nav&gt;   标记定义导航链接\n&lt;main&gt; 表示网页的主体部分（一个页面中只会出现一个main）\n&lt;section&gt;  标记定义一个独立的区块\n&lt;aside&gt;  标记定义页面内容部分的侧边栏\n&lt;hgroup&gt;  标记定义文件中一个区块的相关信息\n&lt;figure&gt;  标记定义一组媒体内容以及它们的标题\n&lt;figcaption&gt;  标签定义 figure 元素的标题。\n&lt;footer&gt;  标记定义一个页面或一个区域的底部\n&lt;dialog&gt;  标记定义一个对话框(会话框)类似微信\n\n\n列表\n无序列表： 无序列表是一个项目的列表，此列项目使用粗体圆点（典型的小黑圆圈）进行标记。\n有序列表： 有序列表也是一列项目，列表项目使用数字进行标记。\n自定义列表： 不仅仅是一列项目，而是项目及其注释的组合。自定义列表以&lt;dl&gt;标签开始。每个自定义列表项以&lt;dt&gt;开始。每个自定义列表项的定义以&lt;dd&gt;开始。\n列表之间可以嵌套\n\n\n\n123456789101112131415161718192021&lt;ul&gt;    &lt;li&gt;1&lt;/li&gt;    &lt;li&gt;2&lt;/li&gt;    &lt;li&gt;3&lt;/li&gt;&lt;/ul&gt;&lt;ol&gt;    &lt;li&gt;1&lt;/li&gt;    &lt;li&gt;2&lt;/li&gt;    &lt;li&gt;3&lt;/li&gt;&lt;/ol&gt;&lt;dl&gt;    &lt;dt&gt;Coffee&lt;/dt&gt;    &lt;dd&gt;黑热饮&lt;/dd&gt;    &lt;dt&gt;Milk&lt;/dt&gt;    &lt;dd&gt;白热饮&lt;/dd&gt;&lt;/dl&gt;\n\n5. 块元素与行内元素\n块元素（block element）\n在网页中一般通过块元素来对页面进行布局\n一般情况下会在块元素中放行内元素，而不会在行内元素中放块元素\n块元素中基本上什么元素都能放\np元素中不能放任何块元素\n\n\n行内元素（inline element）\n行内元素主要用来包裹文字\n\n\n浏览器在解析网页时，会自动对网页中不符合规范的内容进行修正，比如：\n标签写在了根元素的外部\np元素中嵌套了块元素\n根元素中出现了head和body以外的子元素\n\n\n\n6. 超链接\n超链接可以让我们从一个页面跳转到其他页面，或者是当前页面的其他的位置\n使用a标签来定义超链接，在a标签中可以嵌套除他自身外的任何元素\n属性：\nhref： 指定跳转的目标路径\n值可以是一个外部网站的地址\n也可以写一个内部页面的地址\n\n\ntarget属性： 用来指定超链接打开的位置\n_self: 默认值，当前页面中打开超链接\n_blank: 在一个新的网页中打开超链接\n\n\n\n\n\n1&lt;a href=&quot;javascript(0);&quot;&gt;超链接&lt;/a&gt;\n\n\n当我们跳转到一个服务器内部的页面时，一般我们都会使用相对路径\n相对路径都会使用.或..开头\n.&#x2F;可以省略不写，如果不写.&#x2F;也不写..&#x2F;则就相当于写了.&#x2F;\n.&#x2F;表示当前文件所在的目录\n..&#x2F;表示上一级文件目录\n\n\n\n\n回到顶部&#x2F;去到网页任意位置\n可以将超链接的href属性设置为#，这样点击超链接以后，页面不会发生跳转，而是转到当前页面的顶部的位置\n跳转到网页的任意位置，只需要将href属性设置为”#元素的id属性值”\n\n\n\n7. 图片标签\n图片标签用于向当前页面中引入一个外部图片\n使用img标签来引入外部图片，img标签是一个自结束标签\nimg元素属于替换元素（基于块和行内元素之间，具有两种元素的特点）\n属性：\nsrc：属性指定的是外部图片的路径（路径规则和超链接是一样的）\nalt：图片的描述，这个描述默认情况下不会显示，有些浏览器会在图片无法加载时显示，搜索引擎会根据alt中的内容来识别图片\nwidth：图片的宽度（单位是像素）\nheight: 图片的高度（单位是像素），宽度和高度中如果只修改了一个，则另一个会等比例缩放\n注意： 一般在pc端，不建议修改图片的大小，需要多大图片就裁多大，但是在移动端，经常需要对图片进行缩放（大图缩小）\n\n\n图片的格式\njpeg(jpg): 支持的颜色比较丰富，不支持透明效果，不支持动图\n一般用来显示照片\n\n\ngif: 支持的颜色比较少，支持简单透明，支持动图\n适合表示颜色单一的图片，动图\n\n\npng: 支持的颜色丰富，支持复杂透明，不支持动图\n颜色丰富，复杂透明，专为网页而生\n\n\nwebp: 这种是谷歌新推出的专门用来表示网页中的图片的一种格式\n具备了其他图片格式的所有优点，而且文件还特别的小\n缺点: 兼容性不好\n\n\nBase64: 将图片使用base64进行编码\n将图片使用base64编码，可以将图片转换为字符，通过字符的形式引入图片\n一般都是一些需要和网页一起加载的图片才会使用base64\n\n\n效果一样，用小的；效果不一样，用效果好的\n\n\n\n8. 内联框架\n用于向当前页面中引入一个其他页面。&lt;iframe src=&quot;&quot; frameborder=&quot;0&quot;/&gt;\n属性：\nsrc: 指定要引入的网页的路径\nwidth: 宽度\nheight: 高度\nframeborder: 指定内联框架的边框\n\n\n内联框架不会被搜索引擎检索到，所以很少使用\n\n9. 音视频播放\n&lt;audio src=&quot;&quot;&gt;&lt;/audio&gt;\naudio标签用来向页面中引入一个外部的音频文件，音视频文件引入时，默认不允许用户自己控制播放和停止\n属性:\ncontrols: 是否允许用户控制播放，这个属性不是通过值来判断，而是有没有， &lt;audio src=&quot;&quot; controls&gt;&lt;/audio&gt;\nautoplay: 音频文件是否自动播放，与controls一样，不需要给值。设置以后，会自动播放，但是目前大部分浏览器，都不会自动播放\nloop: 循环播放\n\n\n除了通过src指定外部文件的路径外，还可以通过source指定文件的路径\n\n12345&lt;audio controls&gt;    对不起，您的浏览器不支持播放音频！请升级浏览器！    &lt;source src=&quot;&quot;&gt;&lt;/audio&gt;\n\n\n使用video标签来向网页中引入一个视频\n使用方式和audio基本是一样的\n\n\n\n1234&lt;video controls&gt;    &lt;source src=&quot;&quot;&gt;&lt;/video&gt;\n\nCSS1. 介绍\n网页分成三个部门：\n结构HTML\n表现（CSS）\n层叠样式表\n网页实际上是一个多层的结构，通过css可以分别为网页的每一层设置样式，而最终我们能看到只是网页的最上边一层\n总之一句话，css是用来设置网页中元素的样式\n\n\n行为（JavaScript）\n\n\n\n2. 使用css修改元素的样式\n在标签内部通过style属性来设置元素的样式\n问题：\n使用内联样式，样式只能对一个标签生效，如果希望影响到多个元素必须在每个元素中都能复制一遍。并且当样式发生变化时，我们必须要一个一个的修改，非常的不方便\n\n\n注意： 开发时绝对不要用内联样式\n\n\n内部样式表，将样式编写到head中的style标签里，然后通过css的选择器选中元素并为其设置各种样式，可以同时为多个标签设置样式，并且修改时只需要修改一处即可全部应用\n问题：\n它里面的样式不能跨页面进行复用\n\n\n\n\n外部样式表\n可以将css样式编写到一个外部的css文件中，然后通过link标签来引入css文件\n外部样式表需要通过link标签进行引入，意味着只要想使用这些样式的网页都可以对其引用，使样式可以在不同页面之间进行复用\n将样式编写到外部的css文件中，可以使用到浏览器的缓存机制，从而加快网页的加载速度，提高用户的体验\n\n\n\n12&lt;link rel=&quot;stylesheet&quot; href=&quot;&quot;&gt;\n\n3. CSS基本语法：\nCSS中的注释，主食中的内容会被浏览器所忽略\nCSS的基本语法：\n选择器 声明块\n选择器： 通过选择器可以选中页面中的指定元素\n声明块： 通过声明块来指定要为元素设置的样式\n声明块由一个个的声明组成\n声明是一个名值对结构\n一个样式名对应一个样式值，名和值之间以:连接，以;结尾\n\n\n\n\n\n\n选择器\n常用选择器\n标签选择器:  p &#123;&#125;\nid选择器: #id &#123;&#125;\n类选择器: .class &#123;&#125;\n通配选择器: * &#123;&#125;\n\n\n复合选择器\n交集选择器：\n作用： 选中同时符合多个条件的元素\n语法： 选择器1选择器2选择器3选择器n&#123;&#125;\n注意点： 交集选择器中如果有元素选择器，必须使用元素选择器开头\n示例：\n将class为red的div字体设置为30px div.red &#123;font-size: 30px;&#125;\n\n\n\n\n选择器分组（并集选择器）\n作用： 同时选择多个选择器对应的元素\n语法： 选择器1,选择器2,选择器3,选择器n{}\n\n\n\n\n关系选择器\n后代选择器 (空格)\n子选择器 (&gt;)\n相邻兄弟选择器 (+)\n通用兄弟选择器 (~)\n\n\n属性选择器\n[属性名]: 选择含有指定属性的元素\n[属性名&#x3D;属性值]: 选择含有指定属性和属性值的元素\n[属性名^&#x3D;属性值]: 选择属性值以指定值开头的元素\n[属性名$&#x3D;属性值]: 选择属性值以指定值的元素\n[属性值*&#x3D;属性值]: 选择属性值中含有某值的元素的元素\n\n\n伪类选择器\n伪类（不存在的类，特殊的类）： 比如，第一个子元素，被点击的元素、鼠标移入的元素\n伪类一般情况下都是使用:开头\n:first-child 第一个子元素\n:last-child 最后一个子元素\n:nth-child(n) 选中第n个元素\n特殊值：\nn，第n个，n的范围是0到正无穷\n2n或even，表示选中偶数位的元素\n2n+1或odd，表示选中技术位的元素\n\n\n以上这些伪类都是根据所有子元素进行排序的\n\n\n\n:first-of-type\n:last-of-type\n:nth-of-type()\n这几个伪类的功能和上述的类似，不同点是他们是在同类型元素中进行排序\n\n\n:not()否定伪类\n将符合条件的元素从选择器中去除\neg. ul &gt; li:not(:nth-child(3)) &#123;color: yellow;&#125;，除了第三个li元素，其他元素都设置为黄色\n\n\na元素的伪类\n没有访问过的链接（正常的链接）: a:link &#123;&#125;\n已经访问过的链接，由于隐私的原因，所以visited这个伪类只能修改链接的颜色: a:visited &#123;&#125;\n鼠标移入的状态， :hover用来表示鼠标移入的状态\n:active用来表示鼠标点击\n\n\n\n\n伪元素选择器\n伪元素，表示页面中一些特殊的并不真实存在的元素（特殊的位置），伪元素使用::开头\n::first-letter 表示第一个元素\n::first-line 表示第一行\n::selection 表示选中的内容\n::before 元素的开始\n::after 元素的结束\nbefore、after必须结合content属性来使用\n\n\n\n\n样式的继承\n样式的继承，我们为一个元素设置的样式，同时也会应用到它的后代元素上，继承是发生在祖先和后代之间的\n继承的设计是为了方便我们的开发，利用继承我们可以将一些通用的样式设置到共同的祖先元素上，这样只需要设置一次即可让所有的元素都具有该样式\n注意： 不是所有的样式都会被继承，比如：\n背景相关的，布局相关等这些样式都不会被继承\n\n\n\n\n选择器的权重\n样式的冲突，当我们通过不同的选择器，选中相同的元素，并且为相同的样式设置不同的值时，此时发生了样式的冲突\n发生样式冲突时，应用哪个样式由选择器的权重（优先级）决定\n选择器的权重\n内联样式 1,0,0,0\nid选择器 0,1,0,0\n类和伪类选择器 0,0,1,0\n元素选择器 0,0,0,1\n通配选择器 0,0,0,0\n继承的样式 没有优先级\n\n\n比较优先级时，需要将所有的选择器的优先级进行相加计算，最后优先级越高，则越优先显示（分组选择器是单独计算的）\n选择器的累加不会超过其最大的数量级，类选择器再高也不会超过id选择器\n如果优先级计算相同，此时优先使用靠下的样式\n\n\n可以在某一个样式的后边添加!important，则此时该样式会获取到最高的优先级，甚至超过内联样式\n注意： 在开发中这个玩意儿一定要慎用！\n\n\n\n\n像素和百分比\n长度单位：\n像素：\n屏幕（显示器）实际上是由一个个的小点点构成的\n不同屏幕的像素大小是不同的，像素越小的屏幕显示的效果越清晰\n所以同样的200px在不同的设备下显示效果不一样\n\n\n百分比\n百分比可以设置属性相对于父元素属性的百分比\n设置百分比可以使子元素跟随父元素的改变而改变\n\n\nem\nem是相对于元素的字体大小来计算的\n1em&#x3D;1font-size\nem会根据字体大小的改变而改变\n\n\nrem\nrem是相对于根元素的字体大小来计算\n\n\n\n\n\n\n颜色单位\n在css中可以直接使用颜色名来设置各种颜色，比如：\nred\norange\nyellow\nblue\n…\n\n\nRGB值\nRGB通过三种颜色的不同浓度来调配出不同的颜色\nR red, G green, B blue..\n每一种颜色的范围在0-255（0%-100%）之间\n语法： RGB(红色,绿色,蓝色)\n十六进制的RGB值\n语法： #红色绿色蓝色\n颜色浓度通过 00-FF\n如果颜色两位两位重复可以进行简写\n\n\n\n\nRGBA\n在RGB的基础上加了一个不透明度，1表示不透明，0.5表示半透明\n\n\nHSL值\nH 色相（0-360）\nS 饱和度，颜色的浓度 0% - 100%\nL 亮度，颜色的亮度 0% - 100%\n\n\n\n\n\n4. 布局\n文档流（normal flow）\n网页是一个多层的结构，一层摞着一层\n通过CSS可以分别为每一层设置样式\n作为用户来讲只能看到最顶上一层\n这些层中，最底下的一层称为文档流，文档流是网页的基础\n我们所创建的元素默认都是在文档流中进行排列\n\n\n对于我们来说元素主要有两个状态\n在文档流中\n不在文档流中（脱离文档流）\n\n\n元素在文档流中有什么特点：\n块元素\n块元素会在页面中独占一行\n默认宽度是父元素的全部（会把父元素撑满）\n默认高度是被内容撑开（子元素）\n\n\n行内元素\n行内元素不会独占页面的一行，只占自身的大小\n行内元素在页面中自左向右水平排列，如果一行之中不能容纳下所有的行内元素，则元素会换到第二行继续自左向右排列（书写习惯一致）\n行内元素的默认宽度和高度都是被内容撑开\n\n\n\n\n\n\n盒模型、盒子模型、框模型、box model都是说的一个东西\nCSS将页面中的所有元素都设置为了一个矩形的盒子\n将元素设置为矩形的盒子后，对页面的布局就变成将不同的盒子放到不同的位置\n每一个盒子都由以下几个部分组成：\n内容区（content）\n内容区，元素中的所有子元素和文本内容都在内容区中排列\n内容区的大小由width和height两个属性来设置\nwidth设置内容区的宽度，默认值为auto\nheight设置内容区的高度\n要让一个文字在父元素中垂直居中，只需将父元素的line-height设置为一个和父元素height一样的值\n\n\n内边距（padding）\n内容区和边框之间的距离是内边距\n一共有四个方向的内边距\npadding-top\npadding-right\npadding-bottom\npadding-left\n\n\n内边距的设置会影响到盒子的大小\n背景颜色会延伸到内边距上\n一个盒子的可见框的大小，由内容区内边距和边框共同决定，所以在计算盒子的大小时，需要将这三个区域加到一起计算\npadding内边距的简写属性，可以同时指定四个方向的内边距\n\n\n边框（border）\n边框属于盒子的边缘，边框里面属于盒子内部，出了边框都是盒子的外部，边框的大小会影响到整个盒子的大小\n要设置边框，需要至少设置三个样式：\n边框的宽度 border-width\n默认值： 一般是3个像素\n可以用来指定四个方向的边框的宽度的值的情况\n四个值： 上 右 下 左\n三个值： 上 左右 下\n两个值： 上下 左右\n\n\n除了border-width还有一只border-xx-width，xx可以是top right bottom left\n\n\n边框的颜色 border-color，同样可以分别指定四个边框的颜色，也可以不写，如果省略了则自动使用color的颜色值\n边框的样式 border-style\nsolid 表示实线\ndotted 点状虚线\ndashed 虚线\ndouble 双线\n默认是none 表示没有边框\n\n\n\n\n简写属性，通过该属性可以同时设置边框所有的相关样式，并且没有顺序要求\nborder: solid 10px orange;\n\n\n除了border以外还有四个border-xxx\nborder-top\nborder-right\nborder-bottom\nborder-left\n\n\n\n\n外边距（margin）\n外边距不会影响盒子可见框的大小\n但是外边距会影响盒子的位置\n一共有四个方向的内边距：\nmargin-top\n上外边距，设置一个正值，元素会向下移动\n\n\nmargin-right\n默认情况下设置margin-right不会产生任何效果，会由浏览器自动调整\n\n\nmargin-bottom\n下边边距，设置一个正值，其下面的元素会向下移动\n\n\nmargin-left\n左外边距，设置一个正值，元素会向右移动\n\n\nmargin也可以设置负值，如果是负值，则元素会向相反的方向移动\n\n\n元素在页面中是按照自左向右的顺序排列的\n所以默认情况下如果我们设置的左和上外边距则会移动元素自身\n而设置下和右外边距会移动其他元素\n\n\nmargin的简写属性\nmargin可以同时设置四个方向的外边距，用法和padding一样\n\n\nmargin会影响到盒子实际占用空间\n\n\n\n\n\n\n元素的水平方向的布局：\n元素在其父元素中水平方向的位置由以下几个属性共同决定\nmargin-left\nborder-left\npadding-left\nwidth\npadding-right\nborder-right\nmargin-right\n\n\n一个元素在其父元素中，水平布局必须满足以下等式\nmargin-left+border-left+padding-left+width+padding-right+border-right+margin-right&#x3D;其父元素内容区的宽度（必须满足）\n以上等式必须满足，如果相加结果使等式不成立，则成为过渡约束，则等式会自动调整\n调整的情况\n如果这七个值中没有为auto的情况，则浏览器会自动调整margin-right值以使等式满足\n这七个值中有三个值可以设置为auto\nwidth\nmargin-left\nmargin-right\n如果某个值为auto，则会自动调整为auto的那个值以使等式成立\n如果将一个宽度和一个外边距设置为auto，则宽度会调整到最大，设置为auto的外边距会自动为0\n如果将三个值设置为auto，则外边距为0，宽度最大\n如果将两个外边距设置为auto，宽度固定值，则会将外边距设置为相同的\n所以我们经常利用这个特点来使一个元素在其父元素中水平居中\n示例\nwidth: xxxpx;margin: 0 auto;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n垂直方向布局\n默认情况下父元素的高度被内容撑开\n子元素是在父元素的内容区中排列的\n如果子元素的大小超过了父元素，则子元素会从父元素中溢出\n使用overflow属性来设置父元素如何处理溢出的子元素\n可选值：\nvisible: 默认值，子元素会从父元素中溢出，在父元素外部的位置显示\nhidden: 溢出的内容将会被裁剪，不会显示\nscroll: 生成两个滚动条，通过滚动条来查看完整的内容\nauto: 根据需要生成滚动条\n\n\n\n\n\n\n\n\n垂直方向的折叠\n相邻的垂直方向的外边距会发生重叠现象\n兄弟元素\n兄弟元素间的相邻垂直外边距会取两者之间的较大值（两者都是正值）\n特殊情况\n如果相邻的外边距一正一负，则取两者的和\n如果相邻的外边距都是负值，则取两者中绝对值较大的\n\n\n兄弟元素之间外边距的重叠，对于开发是有利的，所以我们不需要进行处理\n\n\n父子元素\n父子元素间相邻外边距，子元素的会传递给父元素（上外边距）\n父子外边距的折叠会影响到页面的布局，必须要进行处理\n解决方案：\n.class::before&#123;content: &#39;&#39;;display: table;&#125;\n\n\n\n\n\n\n行内元素的盒模型\n行内元素不支持设置宽度和高度\n行内元素可以设置padding，但是垂直方向padding不会影响页面的布局\n行内元素可以设置border，但是垂直方向border不会影响页面的布局\n行内元素可以设置margin，垂直方向的margin不会影像布局\ndisplay 用来设置元素显示的类型\n可选值：\ninline 将元素设置为行内元素\nblock 将元素设置为块元素\ninline-block 将元素设置为行内块元素\n行内块，既可以设置宽度和高度，又不会独占一行\n\n\ntable 将元素设置为一个表格\nnone 元素不在页面中显示\n\n\n\n\nvisibility 用来设置元素的显示状态\n可选值：\nvisible 默认值，元素在页面中正常显示\nhidden元素在页面中隐藏 不显示，但是依然占据页面中的位置\n\n\n\n\n\n\n浏览器的默认样式\n通常情况下，浏览器都会元素设置一些默认样式\n默认样式的存在会影响到页面的布局，通常情况下编写网页时必须要去除浏览器的默认样式（PC端的页面）\n\n\n盒子的尺寸\n默认情况下，盒子可见框的大小由内容区、内边距和边框共同决定\nbox-sizing 用来设置盒子尺寸的计算方式（设置width和height的作用）\ncontent-box 默认值，宽度和高度用来设置内容区的大小\nborder-box 宽度和高度用来设置整个盒子可见框的大小\nwidth和height指的是内容区和内边距和边框的总大小\n\n\n\n\n\n\n轮廓和圆角\noutline 用来设置元素的轮廓线，用法和border一模一样\n轮廓和边框不同的点，就是轮廓不会影响到可见框的大小\n\n\nbox-shadow 用来设置元素的阴影效果，阴影不会影响页面布局\n第一个值 水平偏移量 设置阴影的水平位置 正值向右移动 负值向左移动\n第二个值 垂直偏移量 设置阴影的垂直位置 正值向下移动 负值向上移动\n第三个值 阴影的模糊半径\n第四个值 阴影的颜色\n\n\nborder-radius 用来设置圆角\n将元素设置为一个圆形 border-radius: 50%;\n\n\n\n\n浮动的简介\n通过浮动可以使一个元素向其父元素的左侧或右侧移动\n使用float属性来设置于元素的浮动\n可选值\nnone 默认值，元素不浮动\nleft 元素向左浮动\nright 元素向右浮动\n\n\n\n\n注意： 元素设置浮动以后，水平布局的等式便不需要强制成立\n元素设置浮动以后，会完全从文档流中脱离，不再占用文档流的位置，所以元素下边的还在文档流中的元素会自动向上移动\n\n\n\n\n浮动的特点\n浮动元素会完全脱离文档流，不再占据文档流中的位置\n设置浮动以后元素会向父元素的左侧或右侧移动\n浮动元素默认不会从父元素中移出\n浮动元素向左或向右移动时，不会超过他前边的其他浮动元素\n如果浮动元素的上边是一个没有浮动的块元素，则浮动元素无法上移\n浮动元素不会超过它上面的浮动的兄弟元素，最多最多就是和它一样高\n\n\n总结：\n浮动目前来讲它的主要作用就是让页面中的元素可以水平排列，通过浮动可以制作一些水平方向的布局\n\n\n\n\n浮动的其他特点\n浮动元素不会盖住文字，文字会自动环绕在浮动元素的周围，所以我们可以利用浮动来设置文字环绕图片的效果\n元素设置浮动以后，将会从文档流中脱离，从文档流中脱离后，元素的一些特点也会发生变化\n脱离文档流的特点：\n块元素：\n块元素不再独占页面的一行\n脱离文档流以后，块元素的宽度和高度默认都被内容撑开\n\n\n行内元素：\n行内元素脱离文档流以后会变成块元素，特点和块元素一样\n\n\n脱离文档流以后，不需要再区分块和行内了\n\n\n\n\n高度塌陷问题\n在浮动布局中，父元素的高度默认是被子元素撑开的，当子元素浮动后，其会完全脱离文档流，子元素从文档流中脱离，将会无法撑起父元素的高度，导致父元素的高度丢失\n父元素高度丢失以后，其下的元素会自动上移，导致页面的布局混乱，所以高度塌陷是浮动布局中常见的一个问题，这个问题我们必须要进行处理\nBFC(Block Formatting Context)块级格式化环境\nBFC是一个CSS中隐含的属性，可以为一个元素开启BFC\n开启BFC该元素会变成一个独立的布局区域，和其他的块不同\n\n\n元素开启BFC后的特点\n开启BFC的元素不会被浮动元素所覆盖\n开启BFC的元素子元素和父元素外边距不会重叠\n开启BFC的元素可以包含浮动的子元素\n\n\n可以通过一些特殊方式来开启元素的BFC\n设置元素的浮动（不推荐）\n将元素设置为行内块元素（不推荐）\n将元素的overflow设置为一个非visible的值\n常见的方式，为元素设置overflow: hidden开启其BFC（使其可以包含浮动元素）\n\n\n\n\n\n\nclear\n如果我们不希望某个元素因为其他元素浮动的影响而改变位置，可以通过clear属性来清除浮动元素对当前元素所产生的影响\n作用： 清除浮动元素对当前元素所产生的影响\n可选值：\nleft 清除左侧浮动元素对当前元素的影响\nright 清除右侧浮动元素对当前元素的影响\nboth 清除两侧中最大影响的那侧\n\n\nclear: left\n原理： 设置清除浮动以后，浏览器会自动为元素添加一个上外边距，以使其位置不受其他元素的影响\n一般结合after来使用 .box1::after &#123;content: &#39;&#39;;display: block;clear: both;&#125;\n\n\n终极解决方案：\n\n\n\n12345  .clearfix::before, .clearfix::after &#123;    content: &#x27;&#x27;;    display: table;    clear: both;&#125;\n\n\n定位简介\n定位（position）\n定位是一种更加高级的布局手段\n通过定位可以将元素摆放到页面的任意位置\n使用position属性来设置定位\n可选值：\nstatic 默认值，元素是静止的没有开启定位\nrelative 开启元素的相对定位\nabsolute 开启元素的绝对定位\nfixed 开启元素的固定定位\nsticky 开启元素的粘滞定位\n\n\n\n\n相对定位\n当元素的position属性值设置为relative时则开启了元素的相对定位\n相对定位的特点：\n元素开启相对定位以后，如果不设置偏移量元素不会发生任何的变化。\n相对定位是参照于元素在文档流中的位置进行定位的\n相对定位会提升元素的层级\n相对定位不会使元素脱离文档流\n相对定位不会改变元素的性质，块还是块，行内还是行内\n\n\n偏移量（offset）\n当元素开启了定位之后，可以通过偏移量来设置元素的位置。\ntop 定位元素和定位位置上边的距离\nbottom 定位元素和定位位置下边的距离\n定位元素垂直方向的位置由top和bottom两个属性来控制，通常情况下，我们只会使用其中之一\ntop值越大，定位元素越向下移动，bottom值越大，定位元素越向上移动\nleft 定位元素和定位位置左边的距离\nright 定位元素和定位位置右边的距离\n\n\n\n\n\n\n绝对定位\n当元素的position属性值设置为absolute则开启了元素的绝对定位\n绝对定位的特点\n开启绝对定位后，如果不设置偏移量，元素的位置不会发生变化\n开启绝对定位后，元素会从文档流中脱离\n绝对定位会改变元素的性质，行内变成块，块的宽高被内容撑开\n绝对定位会使元素提升一个层级\n绝对定位元素是相对于其包含块进行定位的\n\n\n包含块（containing block）：\n正常情况下：\n包含块就是离当前元素最近的祖先块元素（通常都是父元素）\n绝对定位的包含块：\n包含块就是离他最近的开启了定位的祖先元素，如果所有的祖先元素都没有开启定位则相对于根元素进行定位\n\n\nhtml（根元素、初始包含块）\n\n\n\n\n\n\n固定定位\n当元素的position属性值设置为fixed则开启了元素的固定定位\n固定定位也是一种绝对定位，所以固定定位的大部分特点和绝对定位一样\n唯一不同的是固定定位永远参照于浏览器的视口进行定位\n固定定位的元素不会随网页的滚动条滚动\n\n\n粘滞定位\n当元素的position属性值设置为sticky则开启了元素的粘滞定位\n粘滞定位和相对定位的特点基本一直，不同的是粘滞定位可以在元素到达某个位置时将其固定\n\n\n\n\n\n\n绝对定位元素的布局\n水平布局：left + margin-left + border-left + padding-left + width + padding-right + border-right + margin-right + right = 包含块的内容区的宽度\n当我们开启了绝对定位后\n水平方向的布局等式就需要添加left 和 right两个值，此时规则和之前一样只是多添加两个值\n当发生过渡约束：\n如果9个值中没有auto则自动调整right值以使等式满足\n如果有auto，则自动调整auto的值以使等式满足\n\n\n可设置auto的值\nmargin width left right\n\n\n因为left和right的值默认是auto，所以如果不知道left和right，则等式不满足时，会自动调整这两个值\n\n\n垂直方向布局的等式也必须要满足\ntop + margin-top&#x2F;bottom + padding-top&#x2F;bottom + border-top&#x2F;bottom + height &#x3D; 包含块的高度\n\n\n\n\n元素的层级\n对于开启了定位元素，可以通过z-index属性来指定元素的层级，z-index需要一个整数作为参数，值越大元素的层级越高，元素的层级越高越优先显示\n如果元素的层级一样，则优先显示靠下的元素\n祖先的元素的层级再高也不会盖住后代元素\n\n\n\n5. 字体\n字体相关的样式\ncolor 用来设置字体颜色\nfont-size 字体的大小\nfont-size相关的单位\nem 相当于当前元素的一个font-size\nrem 相当于根元素的一个font-size\n\n\nfont-family 字体族（字体的格式）\n可选值\nserif 衬线字体\nsans-serif 非衬线字体\nmonospace 等宽字体\n指定字体的类别，浏览器会自动使用该类别下的字体\n\n\n\n\n可以同时指定多个字体，多个字体间使用，隔开字体生效时优先使用第一个，第一个无法使用则使用第二个 以此类推\n\n\n@font-face可以将服务器中的字体直接提供给用户去使用\n问题：\n加载速度慢\n版权\n\n\n\n\n\n\n图标字体\n在网页中经常需要使用一些图标，可以通过图片来引入图标，但是图片本身比较大，而且非常的不灵活\n所以在使用图标时，我们还可以将图标直接设置为字体，然后通过font-face的形势来对字体进行引入\n这样我们就可以通过使用字体的形式来使用图标\n\n\nfontawesom\n\n6. 行高（line height）\n行高指的是文字占有的实际高度\n可以通过line-height来设置行高，行高可以直接指定一个大小（px em），也可以直接为行高设置一个整数，如果是一个整数的话，行高将会是字体的指定的倍数\n行高还经常用来设置文字的行间距\n行间距 &#x3D; 行高-字体大小\n\n\n字体框\n字体框就是字体存在的格子，设置font-size实际上就是在设置字体框的高度\n\n\n行高会在字体框的上下平均分配\n\n7. 字体的简写属性\nfont可以设置字体相关的所有属性\n示例： font: 字体大小&#x2F;行高 字体族\nfont: 50px &#39;Times New Roman&#39;, Times, serif;\n行高可以省略不写，如果不写使用默认值\n\n\nfont-weight 字重 字体的加粗\n可选值\nnormal 默认值 不加粗\nbold 加粗\n100-900 九个级别（没什么用）\n\n\n\n\n\n\nfont-style 字体的风格\nnormal 正常的\nitalic 斜体\n\n\n文本的样式\ntext-align 文本的水平对齐\n可选值：\nleft 左侧对齐\nright 右对齐\njustify 两端对齐\n\n\n\n\nvertical-align 设置元素垂直对齐的方式\n可选值：\nbaseline 默认值，基线对齐\ntop 顶部对齐\nbottom 底部对齐\nmiddle 居中对齐\n\n\n\n\ntext-decoration 设置文本修饰\n可选值\nnone 什么都没有\nunderline 下划线\nline-through 删除线\noverline 上划线\n\n\n\n\nwhite-space 设置网页如何处理空白\n可选值\nnormal 正常\nnowrap 不换行\npre 保留空白\n\n\n\n\n\n\n\n8. 背景图片\nbackground-image 设置背景图片\n语法： background-image: url(&quot;url&quot;)\n可以同时设置背景颜色和背景图片\n如果背景的图片小于元素，则背景图片会自动在元素中平铺将元素铺满\n如果背景的图片大于元素，将会有一部分背景无法完全显示\n如果背景图片和元素一样大，则会直接正常显示\n\n\nbackground-repeat 用来设置背景的重复方式\n可选项\nrepeat 默认值，背景会沿着x轴，y轴双方向重复\nrepeat-x 沿着x轴方向重复\nrepeat-y 沿着y轴方向重复\nno-repeat 背景图片不重复\n\n\n\n\nbackground-position 用来设置背景图片的位置\n设置方式\n通过 top left right bottom center几个表示方位的词来设置位置\n使用方位词时必须要同时指定两个值，如果只写一个，则第二个默认center\n通过偏移量来指定背景图片的位置，水平方向的偏移量 垂直方向偏移量\n\n\n\n\n设置背景的范围\nbackground-clip\n可选值：\nborder-box 默认值，背景会出现在边框的下边\npadding-box 背景不会出现在边框，只出现在内容区和内边距\ncontent-box 背景只会出现在内容区\n\n\n\n\nbackground-origin 背景图片的偏移量计算的原点\npadding-box 默认值，background-position从内边距处开始计算\ncontent-box 背景图片的偏移量从内容区处计算\nborder-box 背景图片的变量从边框处开始计算\n\n\nbackground-size 设置背景图片的大小\n第一个值表示宽度\n第二个值表示高度\n如果只写一个，则第二个值默认是auto\ncover 图片的比例不变，将元素铺满\ncontain 图片比例不变，将图片在元素中完整显示\n\n\nbackground-attachment 背景图片是否跟随元素移动\n可选值\nscroll 默认值 背景图片会跟随元素移动\nfixed 背景图片会固定在页面中，不会跟随元素移动\n\n\n\n\n\n\n背景相关简写属性\n所有背景相关的样式都可以通过该样式来设置，并且该样式没有顺序要求，也没有哪个属性是必须写的\nbackground: #bfa url(&#39;url&#39;) center center/contain no-repeat;\n注意：\nbackground-size必须写在background-position的后面，并且使用&#x2F;隔开， background-position&#x2F;background-size\nbackground-origin background-clip两个样式，origin要在clip的前边\n\n\n\n\n图片属于网页中的外部资源，外部资源都需要浏览器单独发送请求加载。浏览器加载外部资源时都是按需加载的，用则加载，不用则不加载。像我们上边的练习link会首先加载，而hover和active会在指定状态触发时才会加载\n解决图片闪烁问题\n可以将多个小图片统一保存到一个大图片中，这样图片会同时加载到网页中，就可以有效避免图片闪烁的问题\n这个技术在网页中应用十分广泛，被称为CSS-Sprite，这种图称为雪碧图\n\n\n\n\n雪碧图使用步骤\n先确定要使用的图标\n测量图标的大小\n根据测量结果创建一个元素\n将雪碧图设置为元素的背景图片\n设置偏移量以显示正确的图片\n\n\n渐变\n通过渐变可以设置一些复杂的背景颜色，可以实现从一个颜色向其他颜色过渡的效果\n渐变是图片，需要通过background-image来设置\n线性渐变，颜色沿着一条直线发生变化 linear-gradient()\nbackground-image: linear-gradient(red,yellow); 红色在开头，黄色在结尾，中间是过渡区域\n线性渐变的开头，我们可以指定一个渐变的方向\nto left\nto right\nto bottom\nto top\nxxxdeg deg表示旋转度数\nbackground-image: linear-gradient(to xx,red,yellow);\n\n\n渐变可以同时指定多个颜色，多个颜色默认情况下平均分布，也可以手动指定渐变的分布情况\n\n\nbackground-image: repeating-linear-gradient(); 可以平铺的线性渐变\n径向渐变（放射性的效果）\nbackground-image: radial-gradient(red, yellow);\n默认情况下径向渐变的形状是根据元素的形状来计算的\n正方形 –&gt; 圆形\n长方形 –&gt; 椭圆形\n我们也可以手动指定径向渐变的大小\ncircle\nellipse\n也可以指定渐变的位置\n\n\n\n\n\n\n\n\n\n9. 动画\n设置网站的图标（在标题栏和收藏栏）\n网站图片一般都存储在网站的根目录下，名字一般都叫做favicon.ico\n用法：&lt;link rel=&quot;icon&quot; href=&quot;./favicon.ico&quot;&gt;\n\n\n过渡（transition）\n通过过渡可以指定一个属性发生变化时的切换方式\n通过过渡可以创建一些非常好的效果，提升用户的体验\ntransition-property: 指定要执行过渡的属性\n多个属性间使用’，’隔开\n如果所有属性都需要过渡，则使用all关键字\n大部分属性都支持过渡效果，注意过渡时必须是从一个有效数值向另外一个有效数值进行过渡\n\n\ntransition-duration: 指定过渡效果的持续时间\n时间单位： s和ms 1s&#x3D;1000ms\n\n\ntransition-timing-function: 过渡的时序函数\n指定过渡的执行的方式\n\n\n\n\n\n","slug":"html-css学习笔记","date":"2024-09-27T09:41:37.000Z","categories_index":"","tags_index":"HTML,CSS","author_index":"Connor Chen"}]
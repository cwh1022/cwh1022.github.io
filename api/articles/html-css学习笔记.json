{"title":"html+css学习笔记","uid":"8f479e832ec9e5bb157e95fd7bbf8907","slug":"html-css学习笔记","date":"2024-09-27T09:41:37.000Z","updated":"2024-09-27T09:50:38.520Z","comments":true,"path":"api/articles/html-css学习笔记.json","keywords":null,"cover":null,"content":"<h1 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h1><h2 id=\"1-html文件结构\"><a href=\"#1-html文件结构\" class=\"headerlink\" title=\"1. html文件结构\"></a>1. html文件结构</h2><h3 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"&lt;html&gt;&lt;&#x2F;html&gt;\"></a>&lt;html&gt;&lt;&#x2F;html&gt;</h3><h3 id=\"-1\"><a href=\"#-1\" class=\"headerlink\" title=\"&lt;head&gt;&lt;&#x2F;head&gt;\"></a>&lt;head&gt;&lt;&#x2F;head&gt;</h3><ol>\n<li>head是网页的头部，head中的内容不会在网页中直接出现，主要用来帮助浏览器或搜索引擎来解析网页</li>\n<li>&lt;meta charset&#x3D;”UTF-8”&gt;<ol>\n<li>可以通过meta标签设置网页的字符集，避免乱码问题</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"-2\"><a href=\"#-2\" class=\"headerlink\" title=\"&lt;body&gt;&lt;&#x2F;body&gt;\"></a>&lt;body&gt;&lt;&#x2F;body&gt;</h3><ol>\n<li>属性： 在标签中设置属性，属性是一个名值对</li>\n</ol>\n<h2 id=\"2-实体\"><a href=\"#2-实体\" class=\"headerlink\" title=\"2. 实体\"></a>2. 实体</h2><ol>\n<li>在网页中编写的多个空格默认情况会自动被浏览器解析为一个空格，因此需要一些特殊的字符串来表示</li>\n<li>实体语法： &amp;entity_name;</li>\n<li>例如：<ol>\n<li>&nbsp; &amp;nbsp; 空格</li>\n<li>&gt; &amp;gt; 大于号</li>\n<li>&lt; &amp;lt; 小于号</li>\n<li>&copy; &amp;copy; 版权符号</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"3-meta标签\"><a href=\"#3-meta标签\" class=\"headerlink\" title=\"3. meta标签\"></a>3. meta标签</h2><ol>\n<li>主要设置网页的一些元数据，元数据不是给用户看的，是给浏览器看的</li>\n<li>常用属性:<ol>\n<li>charset 指定网页的字符集</li>\n<li>name 指定的数据的名称</li>\n<li>content 指定的数据的内容</li>\n</ol>\n</li>\n<li><code>&lt;meta name=&quot;keywords&quot; content=&quot;HTML5,前端,CSS&quot;&gt;</code><ol>\n<li>keywords： 表示网站的关键字</li>\n</ol>\n</li>\n<li><code>&lt;meta name=&quot;description&quot; content=&quot;京东JD.COM-专业的综合网上购物商城，为您提供正品低价的购物选择、优质便捷的服务体验。商品来自全球数十万品牌商家，囊括家电、手机、电脑、服装、居家、母婴、美妆、个护、食品、生鲜等丰富品类，满足各种购物需求。&quot;/&gt;</code><ol>\n<li>description: 网站的描述会显示在搜索引擎的搜索的结果中</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"4-语义化标签\"><a href=\"#4-语义化标签\" class=\"headerlink\" title=\"4. 语义化标签\"></a>4. 语义化标签</h2><ol>\n<li>在网页中，HTML专门用来负责网页的结构，所以在使用HTML标签的时候，应该关注的是标签的语义，而不是他的样式</li>\n<li>标题标签，h1<del>h6 一共有六级标题，h1最重要，h6最不重要，h1在网页中的重要性仅次于title标签，一般情况下，一个页面中只会有一个h1，一般情况下标题标签只会使用h1</del>h3</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>一级标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>二级标题<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>三级标题<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h4</span>&gt;</span>四级标题<span class=\"tag\">&lt;/<span class=\"name\">h4</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h5</span>&gt;</span>五级标题<span class=\"tag\">&lt;/<span class=\"name\">h5</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h6</span>&gt;</span>六级标题<span class=\"tag\">&lt;/<span class=\"name\">h6</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>块元素<ol>\n<li>在页面中独占一行的元素称为块元素（block element）</li>\n</ol>\n</li>\n<li>p标签表示页面中一个段落<ol>\n<li>p标签也是个块元素</li>\n</ol>\n</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>p标签表示页面中一个段落<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"5\">\n<li>hgroup标签用来为标题分组，可以将一组相关的标题同时放入到hgroup</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">hgroup</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Welcome to my WWF<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>For a living planet<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">hgroup</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"6\">\n<li>em标签用于表示语音语调的加重</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>今天天气<span class=\"tag\">&lt;<span class=\"name\">em</span>&gt;</span>真<span class=\"tag\">&lt;/<span class=\"name\">em</span>&gt;</span>不错<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"7\">\n<li>在页面中不会独占一行的元素称为行内元素（inline element）</li>\n<li>strong标签： 加粗</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">strong</span>&gt;</span>加粗<span class=\"tag\">&lt;/<span class=\"name\">strong</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"9\">\n<li>blockquote标签： 表示一个长引用，一般常见于引用别人的话</li>\n<li>q标签： 表示一个段引用，会自带双引号</li>\n<li>br标签： 表示换行</li>\n<li>布局标签（结构化语义标签）<ol>\n<li>&lt;article&gt;  标记定义一篇文章</li>\n<li>&lt;header&gt;  标记定义一个页面或一个区域的头部</li>\n<li>&lt;nav&gt;   标记定义导航链接</li>\n<li>&lt;main&gt; 表示网页的主体部分（一个页面中只会出现一个main）</li>\n<li>&lt;section&gt;  标记定义一个独立的区块</li>\n<li>&lt;aside&gt;  标记定义页面内容部分的侧边栏</li>\n<li>&lt;hgroup&gt;  标记定义文件中一个区块的相关信息</li>\n<li>&lt;figure&gt;  标记定义一组媒体内容以及它们的标题</li>\n<li>&lt;figcaption&gt;  标签定义 figure 元素的标题。</li>\n<li>&lt;footer&gt;  标记定义一个页面或一个区域的底部</li>\n<li>&lt;dialog&gt;  标记定义一个对话框(会话框)类似微信</li>\n</ol>\n</li>\n<li>列表<ol>\n<li>无序列表： 无序列表是一个项目的列表，此列项目使用粗体圆点（典型的小黑圆圈）进行标记。</li>\n<li>有序列表： 有序列表也是一列项目，列表项目使用数字进行标记。</li>\n<li>自定义列表： 不仅仅是一列项目，而是项目及其注释的组合。自定义列表以&lt;dl&gt;标签开始。每个自定义列表项以&lt;dt&gt;开始。每个自定义列表项的定义以&lt;dd&gt;开始。</li>\n<li>列表之间可以嵌套</li>\n</ol>\n</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ol</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ol</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dl</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dt</span>&gt;</span>Coffee<span class=\"tag\">&lt;/<span class=\"name\">dt</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dd</span>&gt;</span>黑热饮<span class=\"tag\">&lt;/<span class=\"name\">dd</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dt</span>&gt;</span>Milk<span class=\"tag\">&lt;/<span class=\"name\">dt</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dd</span>&gt;</span>白热饮<span class=\"tag\">&lt;/<span class=\"name\">dd</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dl</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-块元素与行内元素\"><a href=\"#5-块元素与行内元素\" class=\"headerlink\" title=\"5. 块元素与行内元素\"></a>5. 块元素与行内元素</h2><ol>\n<li>块元素（block element）<ol>\n<li>在网页中一般通过块元素来对页面进行布局</li>\n<li>一般情况下会在块元素中放行内元素，而不会在行内元素中放块元素</li>\n<li>块元素中基本上什么元素都能放</li>\n<li>p元素中不能放任何块元素</li>\n</ol>\n</li>\n<li>行内元素（inline element）<ol>\n<li>行内元素主要用来包裹文字</li>\n</ol>\n</li>\n<li>浏览器在解析网页时，会自动对网页中不符合规范的内容进行修正，比如：<ol>\n<li>标签写在了根元素的外部</li>\n<li>p元素中嵌套了块元素</li>\n<li>根元素中出现了head和body以外的子元素</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"6-超链接\"><a href=\"#6-超链接\" class=\"headerlink\" title=\"6. 超链接\"></a>6. 超链接</h2><ol>\n<li>超链接可以让我们从一个页面跳转到其他页面，或者是当前页面的其他的位置</li>\n<li>使用a标签来定义超链接，在a标签中可以嵌套除他自身外的任何元素</li>\n<li>属性：<ol>\n<li>href： 指定跳转的目标路径<ol>\n<li>值可以是一个外部网站的地址</li>\n<li>也可以写一个内部页面的地址</li>\n</ol>\n</li>\n<li>target属性： 用来指定超链接打开的位置<ol>\n<li>_self: 默认值，当前页面中打开超链接</li>\n<li>_blank: 在一个新的网页中打开超链接</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript(0);&quot;</span>&gt;</span>超链接<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>当我们跳转到一个服务器内部的页面时，一般我们都会使用相对路径<ol>\n<li>相对路径都会使用.或..开头</li>\n<li>.&#x2F;可以省略不写，如果不写.&#x2F;也不写..&#x2F;则就相当于写了.&#x2F;<ol>\n<li>.&#x2F;表示当前文件所在的目录</li>\n<li>..&#x2F;表示上一级文件目录</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>回到顶部&#x2F;去到网页任意位置<ol>\n<li>可以将超链接的href属性设置为#，这样点击超链接以后，页面不会发生跳转，而是转到当前页面的顶部的位置</li>\n<li>跳转到网页的任意位置，只需要将href属性设置为”#元素的id属性值”</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"7-图片标签\"><a href=\"#7-图片标签\" class=\"headerlink\" title=\"7. 图片标签\"></a>7. 图片标签</h2><ol>\n<li>图片标签用于向当前页面中引入一个外部图片</li>\n<li>使用img标签来引入外部图片，img标签是一个自结束标签</li>\n<li>img元素属于替换元素（基于块和行内元素之间，具有两种元素的特点）</li>\n<li>属性：<ol>\n<li>src：属性指定的是外部图片的路径（路径规则和超链接是一样的）</li>\n<li>alt：图片的描述，这个描述默认情况下不会显示，有些浏览器会在图片无法加载时显示，搜索引擎会根据alt中的内容来识别图片</li>\n<li>width：图片的宽度（单位是像素）</li>\n<li>height: 图片的高度（单位是像素），宽度和高度中如果只修改了一个，则另一个会等比例缩放</li>\n<li>注意： 一般在pc端，不建议修改图片的大小，需要多大图片就裁多大，但是在移动端，经常需要对图片进行缩放（大图缩小）</li>\n</ol>\n</li>\n<li>图片的格式<ol>\n<li>jpeg(jpg): 支持的颜色比较丰富，不支持透明效果，不支持动图<ol>\n<li>一般用来显示照片</li>\n</ol>\n</li>\n<li>gif: 支持的颜色比较少，支持简单透明，支持动图<ol>\n<li>适合表示颜色单一的图片，动图</li>\n</ol>\n</li>\n<li>png: 支持的颜色丰富，支持复杂透明，不支持动图<ol>\n<li>颜色丰富，复杂透明，专为网页而生</li>\n</ol>\n</li>\n<li>webp: 这种是谷歌新推出的专门用来表示网页中的图片的一种格式<ol>\n<li>具备了其他图片格式的所有优点，而且文件还特别的小</li>\n<li>缺点: 兼容性不好</li>\n</ol>\n</li>\n<li>Base64: 将图片使用base64进行编码<ol>\n<li>将图片使用base64编码，可以将图片转换为字符，通过字符的形式引入图片</li>\n<li>一般都是一些需要和网页一起加载的图片才会使用base64</li>\n</ol>\n</li>\n<li>效果一样，用小的；效果不一样，用效果好的</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"8-内联框架\"><a href=\"#8-内联框架\" class=\"headerlink\" title=\"8. 内联框架\"></a>8. 内联框架</h2><ol>\n<li>用于向当前页面中引入一个其他页面。<code>&lt;iframe src=&quot;&quot; frameborder=&quot;0&quot;/&gt;</code></li>\n<li>属性：<ol>\n<li>src: 指定要引入的网页的路径</li>\n<li>width: 宽度</li>\n<li>height: 高度</li>\n<li>frameborder: 指定内联框架的边框</li>\n</ol>\n</li>\n<li>内联框架不会被搜索引擎检索到，所以很少使用</li>\n</ol>\n<h2 id=\"9-音视频播放\"><a href=\"#9-音视频播放\" class=\"headerlink\" title=\"9. 音视频播放\"></a>9. 音视频播放</h2><ol>\n<li><code>&lt;audio src=&quot;&quot;&gt;&lt;/audio&gt;</code></li>\n<li>audio标签用来向页面中引入一个外部的音频文件，音视频文件引入时，默认不允许用户自己控制播放和停止</li>\n<li>属性:<ol>\n<li>controls: 是否允许用户控制播放，这个属性不是通过值来判断，而是有没有， <code>&lt;audio src=&quot;&quot; controls&gt;&lt;/audio&gt;</code></li>\n<li>autoplay: 音频文件是否自动播放，与controls一样，不需要给值。设置以后，会自动播放，但是目前大部分浏览器，都不会自动播放</li>\n<li>loop: 循环播放</li>\n</ol>\n</li>\n<li>除了通过src指定外部文件的路径外，还可以通过source指定文件的路径</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">audio</span> <span class=\"attr\">controls</span>&gt;</span></span><br><span class=\"line\">    对不起，您的浏览器不支持播放音频！请升级浏览器！</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">audio</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"5\">\n<li>使用video标签来向网页中引入一个视频<ol>\n<li>使用方式和audio基本是一样的</li>\n</ol>\n</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">video</span> <span class=\"attr\">controls</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">video</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h1><h2 id=\"1-介绍\"><a href=\"#1-介绍\" class=\"headerlink\" title=\"1. 介绍\"></a>1. 介绍</h2><ol>\n<li>网页分成三个部门：<ol>\n<li>结构HTML</li>\n<li>表现（CSS）<ol>\n<li>层叠样式表</li>\n<li>网页实际上是一个多层的结构，通过css可以分别为网页的每一层设置样式，而最终我们能看到只是网页的最上边一层</li>\n<li>总之一句话，css是用来设置网页中元素的样式</li>\n</ol>\n</li>\n<li>行为（JavaScript）</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"2-使用css修改元素的样式\"><a href=\"#2-使用css修改元素的样式\" class=\"headerlink\" title=\"2. 使用css修改元素的样式\"></a>2. 使用css修改元素的样式</h2><ol>\n<li>在标签内部通过style属性来设置元素的样式<ol>\n<li>问题：<ol>\n<li>使用内联样式，样式只能对一个标签生效，如果希望影响到多个元素必须在每个元素中都能复制一遍。并且当样式发生变化时，我们必须要一个一个的修改，非常的不方便</li>\n</ol>\n</li>\n<li>注意： 开发时绝对不要用内联样式</li>\n</ol>\n</li>\n<li>内部样式表，将样式编写到head中的style标签里，然后通过css的选择器选中元素并为其设置各种样式，可以同时为多个标签设置样式，并且修改时只需要修改一处即可全部应用<ol>\n<li>问题：<ol>\n<li>它里面的样式不能跨页面进行复用</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>外部样式表<ol>\n<li>可以将css样式编写到一个外部的css文件中，然后通过link标签来引入css文件</li>\n<li>外部样式表需要通过link标签进行引入，意味着只要想使用这些样式的网页都可以对其引用，使样式可以在不同页面之间进行复用</li>\n<li>将样式编写到外部的css文件中，可以使用到浏览器的缓存机制，从而加快网页的加载速度，提高用户的体验</li>\n</ol>\n</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-CSS基本语法：\"><a href=\"#3-CSS基本语法：\" class=\"headerlink\" title=\"3. CSS基本语法：\"></a>3. CSS基本语法：</h2><ol>\n<li>CSS中的注释，主食中的内容会被浏览器所忽略</li>\n<li>CSS的基本语法：<ol>\n<li>选择器 声明块</li>\n<li>选择器： 通过选择器可以选中页面中的指定元素</li>\n<li>声明块： 通过声明块来指定要为元素设置的样式<ol>\n<li>声明块由一个个的声明组成</li>\n<li>声明是一个名值对结构<ol>\n<li>一个样式名对应一个样式值，名和值之间以:连接，以;结尾</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>选择器<ol>\n<li>常用选择器<ol>\n<li>标签选择器:  <code>p &#123;&#125;</code></li>\n<li>id选择器: <code>#id &#123;&#125;</code></li>\n<li>类选择器: <code>.class &#123;&#125;</code></li>\n<li>通配选择器: <code>* &#123;&#125;</code></li>\n</ol>\n</li>\n<li>复合选择器<ol>\n<li>交集选择器：<ol>\n<li>作用： 选中同时符合多个条件的元素</li>\n<li>语法： <code>选择器1选择器2选择器3选择器n&#123;&#125;</code></li>\n<li>注意点： 交集选择器中如果有元素选择器，必须使用元素选择器开头</li>\n<li>示例：<ol>\n<li>将class为red的div字体设置为30px <code>div.red &#123;font-size: 30px;&#125;</code></li>\n</ol>\n</li>\n</ol>\n</li>\n<li>选择器分组（并集选择器）<ol>\n<li>作用： 同时选择多个选择器对应的元素</li>\n<li>语法： 选择器1,选择器2,选择器3,选择器n{}</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>关系选择器<ol>\n<li>后代选择器 (空格)</li>\n<li>子选择器 (&gt;)</li>\n<li>相邻兄弟选择器 (+)</li>\n<li>通用兄弟选择器 (~)</li>\n</ol>\n</li>\n<li>属性选择器<ol>\n<li>[属性名]: 选择含有指定属性的元素</li>\n<li>[属性名&#x3D;属性值]: 选择含有指定属性和属性值的元素</li>\n<li>[属性名^&#x3D;属性值]: 选择属性值以指定值开头的元素</li>\n<li>[属性名$&#x3D;属性值]: 选择属性值以指定值的元素</li>\n<li>[属性值*&#x3D;属性值]: 选择属性值中含有某值的元素的元素</li>\n</ol>\n</li>\n<li>伪类选择器<ol>\n<li>伪类（不存在的类，特殊的类）： 比如，第一个子元素，被点击的元素、鼠标移入的元素</li>\n<li>伪类一般情况下都是使用:开头</li>\n<li>:first-child 第一个子元素</li>\n<li>:last-child 最后一个子元素</li>\n<li>:nth-child(n) 选中第n个元素<ol>\n<li>特殊值：<ol>\n<li>n，第n个，n的范围是0到正无穷</li>\n<li>2n或even，表示选中偶数位的元素</li>\n<li>2n+1或odd，表示选中技术位的元素</li>\n</ol>\n</li>\n<li>以上这些伪类都是根据所有子元素进行排序的</li>\n</ol>\n</li>\n<li><ol>\n<li>:first-of-type</li>\n<li>:last-of-type</li>\n<li>:nth-of-type()</li>\n<li>这几个伪类的功能和上述的类似，不同点是他们是在同类型元素中进行排序</li>\n</ol>\n</li>\n<li>:not()否定伪类<ol>\n<li>将符合条件的元素从选择器中去除</li>\n<li>eg. <code>ul &gt; li:not(:nth-child(3)) &#123;color: yellow;&#125;</code>，除了第三个li元素，其他元素都设置为黄色</li>\n</ol>\n</li>\n<li>a元素的伪类<ol>\n<li>没有访问过的链接（正常的链接）: <code>a:link &#123;&#125;</code></li>\n<li>已经访问过的链接，由于隐私的原因，所以visited这个伪类只能修改链接的颜色: <code>a:visited &#123;&#125;</code></li>\n<li>鼠标移入的状态， <code>:hover</code>用来表示鼠标移入的状态</li>\n<li><code>:active</code>用来表示鼠标点击</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>伪元素选择器<ol>\n<li>伪元素，表示页面中一些特殊的并不真实存在的元素（特殊的位置），伪元素使用<code>::</code>开头</li>\n<li><code>::first-letter</code> 表示第一个元素</li>\n<li><code>::first-line</code> 表示第一行</li>\n<li><code>::selection</code> 表示选中的内容</li>\n<li><code>::before</code> 元素的开始</li>\n<li><code>::after</code> 元素的结束</li>\n<li>before、after必须结合content属性来使用</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>样式的继承<ol>\n<li>样式的继承，我们为一个元素设置的样式，同时也会应用到它的后代元素上，继承是发生在祖先和后代之间的</li>\n<li>继承的设计是为了方便我们的开发，利用继承我们可以将一些通用的样式设置到共同的祖先元素上，这样只需要设置一次即可让所有的元素都具有该样式</li>\n<li>注意： 不是所有的样式都会被继承，比如：<ol>\n<li>背景相关的，布局相关等这些样式都不会被继承</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>选择器的权重<ol>\n<li>样式的冲突，当我们通过不同的选择器，选中相同的元素，并且为相同的样式设置不同的值时，此时发生了样式的冲突</li>\n<li>发生样式冲突时，应用哪个样式由选择器的权重（优先级）决定</li>\n<li>选择器的权重<ol>\n<li>内联样式 1,0,0,0</li>\n<li>id选择器 0,1,0,0</li>\n<li>类和伪类选择器 0,0,1,0</li>\n<li>元素选择器 0,0,0,1</li>\n<li>通配选择器 0,0,0,0</li>\n<li>继承的样式 没有优先级</li>\n</ol>\n</li>\n<li>比较优先级时，需要将所有的选择器的优先级进行相加计算，最后优先级越高，则越优先显示（分组选择器是单独计算的）<ol>\n<li>选择器的累加不会超过其最大的数量级，类选择器再高也不会超过id选择器</li>\n<li>如果优先级计算相同，此时优先使用靠下的样式</li>\n</ol>\n</li>\n<li>可以在某一个样式的后边添加!important，则此时该样式会获取到最高的优先级，甚至超过内联样式<ol>\n<li>注意： 在开发中这个玩意儿一定要慎用！</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>像素和百分比<ol>\n<li>长度单位：<ol>\n<li>像素：<ol>\n<li>屏幕（显示器）实际上是由一个个的小点点构成的</li>\n<li>不同屏幕的像素大小是不同的，像素越小的屏幕显示的效果越清晰</li>\n<li>所以同样的200px在不同的设备下显示效果不一样</li>\n</ol>\n</li>\n<li>百分比<ol>\n<li>百分比可以设置属性相对于父元素属性的百分比</li>\n<li>设置百分比可以使子元素跟随父元素的改变而改变</li>\n</ol>\n</li>\n<li>em<ol>\n<li>em是相对于元素的字体大小来计算的</li>\n<li>1em&#x3D;1font-size</li>\n<li>em会根据字体大小的改变而改变</li>\n</ol>\n</li>\n<li>rem<ol>\n<li>rem是相对于根元素的字体大小来计算</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>颜色单位<ol>\n<li>在css中可以直接使用颜色名来设置各种颜色，比如：<ol>\n<li>red</li>\n<li>orange</li>\n<li>yellow</li>\n<li>blue</li>\n<li>…</li>\n</ol>\n</li>\n<li>RGB值<ol>\n<li>RGB通过三种颜色的不同浓度来调配出不同的颜色</li>\n<li>R red, G green, B blue..</li>\n<li>每一种颜色的范围在0-255（0%-100%）之间</li>\n<li>语法： RGB(红色,绿色,蓝色)</li>\n<li>十六进制的RGB值<ol>\n<li>语法： #红色绿色蓝色</li>\n<li>颜色浓度通过 00-FF</li>\n<li>如果颜色两位两位重复可以进行简写</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>RGBA<ol>\n<li>在RGB的基础上加了一个不透明度，1表示不透明，0.5表示半透明</li>\n</ol>\n</li>\n<li>HSL值<ol>\n<li>H 色相（0-360）</li>\n<li>S 饱和度，颜色的浓度 0% - 100%</li>\n<li>L 亮度，颜色的亮度 0% - 100%</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"4-布局\"><a href=\"#4-布局\" class=\"headerlink\" title=\"4. 布局\"></a>4. 布局</h2><ol>\n<li>文档流（normal flow）<ol>\n<li>网页是一个多层的结构，一层摞着一层</li>\n<li>通过CSS可以分别为每一层设置样式</li>\n<li>作为用户来讲只能看到最顶上一层</li>\n<li>这些层中，最底下的一层称为文档流，文档流是网页的基础<ol>\n<li>我们所创建的元素默认都是在文档流中进行排列</li>\n</ol>\n</li>\n<li>对于我们来说元素主要有两个状态<ol>\n<li>在文档流中</li>\n<li>不在文档流中（脱离文档流）</li>\n</ol>\n</li>\n<li>元素在文档流中有什么特点：<ol>\n<li>块元素<ol>\n<li>块元素会在页面中独占一行</li>\n<li>默认宽度是父元素的全部（会把父元素撑满）</li>\n<li>默认高度是被内容撑开（子元素）</li>\n</ol>\n</li>\n<li>行内元素<ol>\n<li>行内元素不会独占页面的一行，只占自身的大小</li>\n<li>行内元素在页面中自左向右水平排列，如果一行之中不能容纳下所有的行内元素，则元素会换到第二行继续自左向右排列（书写习惯一致）</li>\n<li>行内元素的默认宽度和高度都是被内容撑开</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>盒模型、盒子模型、框模型、box model都是说的一个东西<ol>\n<li>CSS将页面中的所有元素都设置为了一个矩形的盒子</li>\n<li>将元素设置为矩形的盒子后，对页面的布局就变成将不同的盒子放到不同的位置</li>\n<li>每一个盒子都由以下几个部分组成：<ol>\n<li>内容区（content）<ol>\n<li>内容区，元素中的所有子元素和文本内容都在内容区中排列</li>\n<li>内容区的大小由width和height两个属性来设置</li>\n<li>width设置内容区的宽度，默认值为auto</li>\n<li>height设置内容区的高度</li>\n<li>要让一个文字在父元素中垂直居中，只需将父元素的line-height设置为一个和父元素height一样的值</li>\n</ol>\n</li>\n<li>内边距（padding）<ol>\n<li>内容区和边框之间的距离是内边距</li>\n<li>一共有四个方向的内边距<ol>\n<li>padding-top</li>\n<li>padding-right</li>\n<li>padding-bottom</li>\n<li>padding-left</li>\n</ol>\n</li>\n<li>内边距的设置会影响到盒子的大小</li>\n<li>背景颜色会延伸到内边距上</li>\n<li>一个盒子的可见框的大小，由内容区内边距和边框共同决定，所以在计算盒子的大小时，需要将这三个区域加到一起计算</li>\n<li>padding内边距的简写属性，可以同时指定四个方向的内边距</li>\n</ol>\n</li>\n<li>边框（border）<ol>\n<li>边框属于盒子的边缘，边框里面属于盒子内部，出了边框都是盒子的外部，边框的大小会影响到整个盒子的大小</li>\n<li>要设置边框，需要至少设置三个样式：<ol>\n<li>边框的宽度 border-width<ol>\n<li>默认值： 一般是3个像素</li>\n<li>可以用来指定四个方向的边框的宽度的值的情况<ol>\n<li>四个值： 上 右 下 左</li>\n<li>三个值： 上 左右 下</li>\n<li>两个值： 上下 左右</li>\n</ol>\n</li>\n<li>除了border-width还有一只border-xx-width，xx可以是top right bottom left</li>\n</ol>\n</li>\n<li>边框的颜色 border-color，同样可以分别指定四个边框的颜色，也可以不写，如果省略了则自动使用color的颜色值</li>\n<li>边框的样式 border-style<ol>\n<li>solid 表示实线</li>\n<li>dotted 点状虚线</li>\n<li>dashed 虚线</li>\n<li>double 双线</li>\n<li>默认是none 表示没有边框</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>简写属性，通过该属性可以同时设置边框所有的相关样式，并且没有顺序要求<ol>\n<li>border: solid 10px orange;</li>\n</ol>\n</li>\n<li>除了border以外还有四个border-xxx<ol>\n<li>border-top</li>\n<li>border-right</li>\n<li>border-bottom</li>\n<li>border-left</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>外边距（margin）<ol>\n<li>外边距不会影响盒子可见框的大小</li>\n<li>但是外边距会影响盒子的位置</li>\n<li>一共有四个方向的内边距：<ol>\n<li>margin-top<ol>\n<li>上外边距，设置一个正值，元素会向下移动</li>\n</ol>\n</li>\n<li>margin-right<ol>\n<li>默认情况下设置margin-right不会产生任何效果，会由浏览器自动调整</li>\n</ol>\n</li>\n<li>margin-bottom<ol>\n<li>下边边距，设置一个正值，其下面的元素会向下移动</li>\n</ol>\n</li>\n<li>margin-left<ol>\n<li>左外边距，设置一个正值，元素会向右移动</li>\n</ol>\n</li>\n<li>margin也可以设置负值，如果是负值，则元素会向相反的方向移动</li>\n</ol>\n</li>\n<li>元素在页面中是按照自左向右的顺序排列的<ol>\n<li>所以默认情况下如果我们设置的左和上外边距则会移动元素自身</li>\n<li>而设置下和右外边距会移动其他元素</li>\n</ol>\n</li>\n<li>margin的简写属性<ol>\n<li>margin可以同时设置四个方向的外边距，用法和padding一样</li>\n</ol>\n</li>\n<li>margin会影响到盒子实际占用空间</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>元素的水平方向的布局：<ol>\n<li>元素在其父元素中水平方向的位置由以下几个属性共同决定<ol>\n<li>margin-left</li>\n<li>border-left</li>\n<li>padding-left</li>\n<li>width</li>\n<li>padding-right</li>\n<li>border-right</li>\n<li>margin-right</li>\n</ol>\n</li>\n<li>一个元素在其父元素中，水平布局必须满足以下等式<ol>\n<li>margin-left+border-left+padding-left+width+padding-right+border-right+margin-right&#x3D;其父元素内容区的宽度（必须满足）</li>\n<li>以上等式必须满足，如果相加结果使等式不成立，则成为过渡约束，则等式会自动调整<ol>\n<li>调整的情况<ol>\n<li>如果这七个值中没有为auto的情况，则浏览器会自动调整margin-right值以使等式满足</li>\n<li>这七个值中有三个值可以设置为auto<ol>\n<li>width</li>\n<li>margin-left</li>\n<li>margin-right</li>\n<li>如果某个值为auto，则会自动调整为auto的那个值以使等式成立</li>\n<li>如果将一个宽度和一个外边距设置为auto，则宽度会调整到最大，设置为auto的外边距会自动为0</li>\n<li>如果将三个值设置为auto，则外边距为0，宽度最大</li>\n<li>如果将两个外边距设置为auto，宽度固定值，则会将外边距设置为相同的<ol>\n<li>所以我们经常利用这个特点来使一个元素在其父元素中水平居中</li>\n<li>示例<ol>\n<li><code>width: xxxpx;margin: 0 auto;</code></li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>垂直方向布局<ol>\n<li>默认情况下父元素的高度被内容撑开</li>\n<li>子元素是在父元素的内容区中排列的<ol>\n<li>如果子元素的大小超过了父元素，则子元素会从父元素中溢出</li>\n<li>使用overflow属性来设置父元素如何处理溢出的子元素<ol>\n<li>可选值：<ol>\n<li>visible: 默认值，子元素会从父元素中溢出，在父元素外部的位置显示</li>\n<li>hidden: 溢出的内容将会被裁剪，不会显示</li>\n<li>scroll: 生成两个滚动条，通过滚动条来查看完整的内容</li>\n<li>auto: 根据需要生成滚动条</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>垂直方向的折叠<ol>\n<li>相邻的垂直方向的外边距会发生重叠现象</li>\n<li>兄弟元素<ol>\n<li>兄弟元素间的相邻垂直外边距会取两者之间的较大值（两者都是正值）</li>\n<li>特殊情况<ol>\n<li>如果相邻的外边距一正一负，则取两者的和</li>\n<li>如果相邻的外边距都是负值，则取两者中绝对值较大的</li>\n</ol>\n</li>\n<li>兄弟元素之间外边距的重叠，对于开发是有利的，所以我们不需要进行处理</li>\n</ol>\n</li>\n<li>父子元素<ol>\n<li>父子元素间相邻外边距，子元素的会传递给父元素（上外边距）</li>\n<li>父子外边距的折叠会影响到页面的布局，必须要进行处理</li>\n<li>解决方案：<ol>\n<li><code>.class::before&#123;content: &#39;&#39;;display: table;&#125;</code></li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>行内元素的盒模型<ol>\n<li>行内元素不支持设置宽度和高度</li>\n<li>行内元素可以设置padding，但是垂直方向padding不会影响页面的布局</li>\n<li>行内元素可以设置border，但是垂直方向border不会影响页面的布局</li>\n<li>行内元素可以设置margin，垂直方向的margin不会影像布局</li>\n<li>display 用来设置元素显示的类型<ol>\n<li>可选值：<ol>\n<li>inline 将元素设置为行内元素</li>\n<li>block 将元素设置为块元素</li>\n<li>inline-block 将元素设置为行内块元素<ol>\n<li>行内块，既可以设置宽度和高度，又不会独占一行</li>\n</ol>\n</li>\n<li>table 将元素设置为一个表格</li>\n<li>none 元素不在页面中显示</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>visibility 用来设置元素的显示状态<ol>\n<li>可选值：<ol>\n<li>visible 默认值，元素在页面中正常显示</li>\n<li>hidden元素在页面中隐藏 不显示，但是依然占据页面中的位置</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>浏览器的默认样式<ol>\n<li>通常情况下，浏览器都会元素设置一些默认样式</li>\n<li>默认样式的存在会影响到页面的布局，通常情况下编写网页时必须要去除浏览器的默认样式（PC端的页面）</li>\n</ol>\n</li>\n<li>盒子的尺寸<ol>\n<li>默认情况下，盒子可见框的大小由内容区、内边距和边框共同决定</li>\n<li>box-sizing 用来设置盒子尺寸的计算方式（设置width和height的作用）<ol>\n<li>content-box 默认值，宽度和高度用来设置内容区的大小</li>\n<li>border-box 宽度和高度用来设置整个盒子可见框的大小<ol>\n<li>width和height指的是内容区和内边距和边框的总大小</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>轮廓和圆角<ol>\n<li>outline 用来设置元素的轮廓线，用法和border一模一样<ol>\n<li>轮廓和边框不同的点，就是轮廓不会影响到可见框的大小</li>\n</ol>\n</li>\n<li>box-shadow 用来设置元素的阴影效果，阴影不会影响页面布局<ol>\n<li>第一个值 水平偏移量 设置阴影的水平位置 正值向右移动 负值向左移动</li>\n<li>第二个值 垂直偏移量 设置阴影的垂直位置 正值向下移动 负值向上移动</li>\n<li>第三个值 阴影的模糊半径</li>\n<li>第四个值 阴影的颜色</li>\n</ol>\n</li>\n<li>border-radius 用来设置圆角<ol>\n<li>将元素设置为一个圆形 <code>border-radius: 50%;</code></li>\n</ol>\n</li>\n</ol>\n</li>\n<li>浮动的简介<ol>\n<li>通过浮动可以使一个元素向其父元素的左侧或右侧移动<ol>\n<li>使用float属性来设置于元素的浮动<ol>\n<li>可选值<ol>\n<li>none 默认值，元素不浮动</li>\n<li>left 元素向左浮动</li>\n<li>right 元素向右浮动</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>注意： 元素设置浮动以后，水平布局的等式便不需要强制成立<ol>\n<li>元素设置浮动以后，会完全从文档流中脱离，不再占用文档流的位置，所以元素下边的还在文档流中的元素会自动向上移动</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>浮动的特点<ol>\n<li>浮动元素会完全脱离文档流，不再占据文档流中的位置</li>\n<li>设置浮动以后元素会向父元素的左侧或右侧移动</li>\n<li>浮动元素默认不会从父元素中移出</li>\n<li>浮动元素向左或向右移动时，不会超过他前边的其他浮动元素</li>\n<li>如果浮动元素的上边是一个没有浮动的块元素，则浮动元素无法上移</li>\n<li>浮动元素不会超过它上面的浮动的兄弟元素，最多最多就是和它一样高</li>\n</ol>\n</li>\n<li>总结：<ol>\n<li>浮动目前来讲它的主要作用就是让页面中的元素可以水平排列，通过浮动可以制作一些水平方向的布局</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>浮动的其他特点<ol>\n<li>浮动元素不会盖住文字，文字会自动环绕在浮动元素的周围，所以我们可以利用浮动来设置文字环绕图片的效果</li>\n<li>元素设置浮动以后，将会从文档流中脱离，从文档流中脱离后，元素的一些特点也会发生变化</li>\n<li>脱离文档流的特点：<ol>\n<li>块元素：<ol>\n<li>块元素不再独占页面的一行</li>\n<li>脱离文档流以后，块元素的宽度和高度默认都被内容撑开</li>\n</ol>\n</li>\n<li>行内元素：<ol>\n<li>行内元素脱离文档流以后会变成块元素，特点和块元素一样</li>\n</ol>\n</li>\n<li>脱离文档流以后，不需要再区分块和行内了</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>高度塌陷问题<ol start=\"4\">\n<li>在浮动布局中，父元素的高度默认是被子元素撑开的，当子元素浮动后，其会完全脱离文档流，子元素从文档流中脱离，将会无法撑起父元素的高度，导致父元素的高度丢失</li>\n<li>父元素高度丢失以后，其下的元素会自动上移，导致页面的布局混乱，所以高度塌陷是浮动布局中常见的一个问题，这个问题我们必须要进行处理</li>\n<li>BFC(Block Formatting Context)块级格式化环境<ol>\n<li>BFC是一个CSS中隐含的属性，可以为一个元素开启BFC<ol>\n<li>开启BFC该元素会变成一个独立的布局区域，和其他的块不同</li>\n</ol>\n</li>\n<li>元素开启BFC后的特点<ol>\n<li>开启BFC的元素不会被浮动元素所覆盖</li>\n<li>开启BFC的元素子元素和父元素外边距不会重叠</li>\n<li>开启BFC的元素可以包含浮动的子元素</li>\n</ol>\n</li>\n<li>可以通过一些特殊方式来开启元素的BFC<ol>\n<li>设置元素的浮动（不推荐）</li>\n<li>将元素设置为行内块元素（不推荐）</li>\n<li>将元素的overflow设置为一个非visible的值<ol>\n<li>常见的方式，为元素设置overflow: hidden开启其BFC（使其可以包含浮动元素）</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>clear<ol>\n<li>如果我们不希望某个元素因为其他元素浮动的影响而改变位置，可以通过clear属性来清除浮动元素对当前元素所产生的影响</li>\n<li>作用： 清除浮动元素对当前元素所产生的影响</li>\n<li>可选值：<ol>\n<li>left 清除左侧浮动元素对当前元素的影响</li>\n<li>right 清除右侧浮动元素对当前元素的影响</li>\n<li>both 清除两侧中最大影响的那侧</li>\n</ol>\n</li>\n<li><code>clear: left</code></li>\n<li>原理： 设置清除浮动以后，浏览器会自动为元素添加一个上外边距，以使其位置不受其他元素的影响</li>\n<li>一般结合after来使用 <code>.box1::after &#123;content: &#39;&#39;;display: block;clear: both;&#125;</code></li>\n</ol>\n</li>\n<li>终极解决方案：</li>\n</ol>\n</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"selector-class\">.clearfix</span><span class=\"selector-pseudo\">::before</span>, <span class=\"selector-class\">.clearfix</span><span class=\"selector-pseudo\">::after</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: table;</span><br><span class=\"line\">    <span class=\"attribute\">clear</span>: both;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"13\">\n<li>定位简介<ol>\n<li>定位（position）<ol>\n<li>定位是一种更加高级的布局手段</li>\n<li>通过定位可以将元素摆放到页面的任意位置</li>\n<li>使用position属性来设置定位<ol>\n<li>可选值：<ol>\n<li>static 默认值，元素是静止的没有开启定位</li>\n<li>relative 开启元素的相对定位</li>\n<li>absolute 开启元素的绝对定位</li>\n<li>fixed 开启元素的固定定位</li>\n<li>sticky 开启元素的粘滞定位</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>相对定位<ol>\n<li>当元素的position属性值设置为relative时则开启了元素的相对定位</li>\n<li>相对定位的特点：<ol>\n<li>元素开启相对定位以后，如果不设置偏移量元素不会发生任何的变化。</li>\n<li>相对定位是参照于<strong>元素在文档流中的位置</strong>进行定位的</li>\n<li>相对定位会提升元素的层级</li>\n<li>相对定位<strong>不会使元素脱离文档流</strong></li>\n<li>相对定位不会改变元素的性质，块还是块，行内还是行内</li>\n</ol>\n</li>\n<li>偏移量（offset）<ol>\n<li>当元素<strong>开启</strong>了定位之后，可以通过偏移量来设置元素的位置。<ol>\n<li>top 定位元素和定位位置上边的距离</li>\n<li>bottom 定位元素和定位位置下边的距离</li>\n<li>定位元素垂直方向的位置由top和bottom两个属性来控制，通常情况下，我们只会使用其中之一</li>\n<li>top值越大，定位元素越向下移动，bottom值越大，定位元素越向上移动</li>\n<li>left 定位元素和定位位置左边的距离</li>\n<li>right 定位元素和定位位置右边的距离</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>绝对定位<ol>\n<li>当元素的position属性值设置为absolute则开启了元素的绝对定位</li>\n<li>绝对定位的特点<ol>\n<li>开启绝对定位后，如果不设置偏移量，元素的位置不会发生变化</li>\n<li>开启绝对定位后，元素<strong>会从文档流中脱离</strong></li>\n<li>绝对定位会改变元素的性质，行内变成块，块的宽高被内容撑开</li>\n<li>绝对定位会使元素提升一个层级</li>\n<li>绝对定位元素是<strong>相对于其包含块</strong>进行定位的</li>\n</ol>\n</li>\n<li>包含块（containing block）：<ol>\n<li>正常情况下：<ol>\n<li>包含块就是离当前元素最近的祖先块元素（通常都是父元素）</li>\n<li>绝对定位的包含块：<ol>\n<li>包含块就是离他最近的开启了定位的祖先元素，如果所有的祖先元素都没有开启定位则相对于根元素进行定位</li>\n</ol>\n</li>\n<li>html（根元素、初始包含块）</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>固定定位<ol>\n<li>当元素的position属性值设置为fixed则开启了元素的固定定位</li>\n<li>固定定位也是一种绝对定位，所以固定定位的大部分特点和绝对定位一样</li>\n<li>唯一不同的是固定定位永远参照于浏览器的视口进行定位</li>\n<li>固定定位的元素不会随网页的滚动条滚动</li>\n</ol>\n</li>\n<li>粘滞定位<ol>\n<li>当元素的position属性值设置为sticky则开启了元素的粘滞定位</li>\n<li>粘滞定位和相对定位的特点基本一直，不同的是粘滞定位可以在元素到达某个位置时将其固定</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>绝对定位元素的布局<ol>\n<li>水平布局：<br><code>left + margin-left + border-left + padding-left + width + padding-right + border-right + margin-right + right = 包含块的内容区的宽度</code></li>\n<li>当我们开启了绝对定位后<ol>\n<li>水平方向的布局等式就需要添加left 和 right两个值，此时规则和之前一样只是多添加两个值</li>\n<li>当发生过渡约束：<ol>\n<li>如果9个值中没有auto则自动调整right值以使等式满足</li>\n<li>如果有auto，则自动调整auto的值以使等式满足</li>\n</ol>\n</li>\n<li>可设置auto的值<ol>\n<li>margin width left right</li>\n</ol>\n</li>\n<li>因为left和right的值默认是auto，所以如果不知道left和right，则等式不满足时，会自动调整这两个值</li>\n</ol>\n</li>\n<li>垂直方向布局的等式也必须要满足<ol>\n<li>top + margin-top&#x2F;bottom + padding-top&#x2F;bottom + border-top&#x2F;bottom + height &#x3D; 包含块的高度</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>元素的层级<ol>\n<li>对于开启了定位元素，可以通过z-index属性来指定元素的层级，z-index需要一个整数作为参数，值越大元素的层级越高，元素的层级越高越优先显示</li>\n<li>如果元素的层级一样，则优先显示靠下的元素</li>\n<li>祖先的元素的层级再高也不会盖住后代元素</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"5-字体\"><a href=\"#5-字体\" class=\"headerlink\" title=\"5. 字体\"></a>5. 字体</h2><ol>\n<li>字体相关的样式<ol>\n<li>color 用来设置字体颜色</li>\n<li>font-size 字体的大小</li>\n<li>font-size相关的单位<ol>\n<li>em 相当于当前元素的一个font-size</li>\n<li>rem 相当于根元素的一个font-size</li>\n</ol>\n</li>\n<li>font-family 字体族（字体的格式）<ol>\n<li>可选值<ol>\n<li>serif 衬线字体</li>\n<li>sans-serif 非衬线字体</li>\n<li>monospace 等宽字体<ol>\n<li>指定字体的类别，浏览器会自动使用该类别下的字体</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>可以同时指定多个字体，多个字体间使用，隔开字体生效时优先使用第一个，第一个无法使用则使用第二个 以此类推</li>\n</ol>\n</li>\n<li>@font-face可以将服务器中的字体直接提供给用户去使用<ol>\n<li>问题：<ol>\n<li>加载速度慢</li>\n<li>版权</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>图标字体<ol>\n<li>在网页中经常需要使用一些图标，可以通过图片来引入图标，但是图片本身比较大，而且非常的不灵活</li>\n<li>所以在使用图标时，我们还可以将图标直接设置为字体，然后通过font-face的形势来对字体进行引入</li>\n<li>这样我们就可以通过使用字体的形式来使用图标</li>\n</ol>\n</li>\n<li>fontawesom</li>\n</ol>\n<h2 id=\"6-行高（line-height）\"><a href=\"#6-行高（line-height）\" class=\"headerlink\" title=\"6. 行高（line height）\"></a>6. 行高（line height）</h2><ol>\n<li>行高指的是文字占有的实际高度</li>\n<li>可以通过line-height来设置行高，行高可以直接指定一个大小（px em），也可以直接为行高设置一个整数，如果是一个整数的话，行高将会是字体的指定的倍数</li>\n<li>行高还经常用来设置文字的行间距<ol>\n<li>行间距 &#x3D; 行高-字体大小</li>\n</ol>\n</li>\n<li>字体框<ol>\n<li>字体框就是字体存在的格子，设置font-size实际上就是在设置字体框的高度</li>\n</ol>\n</li>\n<li>行高会在字体框的上下平均分配</li>\n</ol>\n<h2 id=\"7-字体的简写属性\"><a href=\"#7-字体的简写属性\" class=\"headerlink\" title=\"7. 字体的简写属性\"></a>7. 字体的简写属性</h2><ol>\n<li>font可以设置字体相关的所有属性</li>\n<li>示例： font: 字体大小&#x2F;行高 字体族<ol>\n<li><code>font: 50px &#39;Times New Roman&#39;, Times, serif;</code></li>\n<li>行高可以省略不写，如果不写使用默认值</li>\n</ol>\n</li>\n<li>font-weight 字重 字体的加粗<ol>\n<li>可选值<ol>\n<li>normal 默认值 不加粗</li>\n<li>bold 加粗<ol>\n<li>100-900 九个级别（没什么用）</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>font-style 字体的风格<ol>\n<li>normal 正常的</li>\n<li>italic 斜体</li>\n</ol>\n</li>\n<li>文本的样式<ol>\n<li>text-align 文本的水平对齐<ol>\n<li>可选值：<ol>\n<li>left 左侧对齐</li>\n<li>right 右对齐</li>\n<li>justify 两端对齐</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>vertical-align 设置元素垂直对齐的方式<ol>\n<li>可选值：<ol>\n<li>baseline 默认值，基线对齐</li>\n<li>top 顶部对齐</li>\n<li>bottom 底部对齐</li>\n<li>middle 居中对齐</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>text-decoration 设置文本修饰<ol>\n<li>可选值<ol>\n<li>none 什么都没有</li>\n<li>underline 下划线</li>\n<li>line-through 删除线</li>\n<li>overline 上划线</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>white-space 设置网页如何处理空白<ol>\n<li>可选值<ol>\n<li>normal 正常</li>\n<li>nowrap 不换行</li>\n<li>pre 保留空白</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"8-背景图片\"><a href=\"#8-背景图片\" class=\"headerlink\" title=\"8. 背景图片\"></a>8. 背景图片</h2><ol>\n<li>background-image 设置背景图片<ol>\n<li>语法： <code>background-image: url(&quot;url&quot;)</code></li>\n<li>可以同时设置背景颜色和背景图片</li>\n<li>如果背景的图片小于元素，则背景图片会自动在元素中平铺将元素铺满</li>\n<li>如果背景的图片大于元素，将会有一部分背景无法完全显示</li>\n<li>如果背景图片和元素一样大，则会直接正常显示</li>\n</ol>\n</li>\n<li>background-repeat 用来设置背景的重复方式<ol>\n<li>可选项<ol>\n<li>repeat 默认值，背景会沿着x轴，y轴双方向重复</li>\n<li>repeat-x 沿着x轴方向重复</li>\n<li>repeat-y 沿着y轴方向重复</li>\n<li>no-repeat 背景图片不重复</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>background-position 用来设置背景图片的位置<ol>\n<li>设置方式<ol>\n<li>通过 top left right bottom center几个表示方位的词来设置位置</li>\n<li>使用方位词时必须要同时指定两个值，如果只写一个，则第二个默认center</li>\n<li>通过偏移量来指定背景图片的位置，水平方向的偏移量 垂直方向偏移量</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>设置背景的范围<ol>\n<li>background-clip<ol>\n<li>可选值：<ol>\n<li>border-box 默认值，背景会出现在边框的下边</li>\n<li>padding-box 背景不会出现在边框，只出现在内容区和内边距</li>\n<li>content-box 背景只会出现在内容区</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>background-origin 背景图片的偏移量计算的原点<ol>\n<li>padding-box 默认值，background-position从内边距处开始计算</li>\n<li>content-box 背景图片的偏移量从内容区处计算</li>\n<li>border-box 背景图片的变量从边框处开始计算</li>\n</ol>\n</li>\n<li>background-size 设置背景图片的大小<ol>\n<li>第一个值表示宽度</li>\n<li>第二个值表示高度</li>\n<li>如果只写一个，则第二个值默认是auto</li>\n<li>cover 图片的比例不变，将元素铺满</li>\n<li>contain 图片比例不变，将图片在元素中完整显示</li>\n</ol>\n</li>\n<li>background-attachment 背景图片是否跟随元素移动<ol>\n<li>可选值<ol>\n<li>scroll 默认值 背景图片会跟随元素移动</li>\n<li>fixed 背景图片会固定在页面中，不会跟随元素移动</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>背景相关简写属性<ol>\n<li>所有背景相关的样式都可以通过该样式来设置，并且该样式没有顺序要求，也没有哪个属性是必须写的</li>\n<li><code>background: #bfa url(&#39;url&#39;) center center/contain no-repeat;</code></li>\n<li>注意：<ol>\n<li>background-size必须写在background-position的后面，并且使用&#x2F;隔开， background-position&#x2F;background-size</li>\n<li>background-origin background-clip两个样式，origin要在clip的前边</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>图片属于网页中的外部资源，外部资源都需要浏览器单独发送请求加载。浏览器加载外部资源时都是按需加载的，用则加载，不用则不加载。像我们上边的练习link会首先加载，而hover和active会在指定状态触发时才会加载<ol>\n<li>解决图片闪烁问题<ol>\n<li>可以将多个小图片统一保存到一个大图片中，这样图片会同时加载到网页中，就可以有效避免图片闪烁的问题</li>\n<li>这个技术在网页中应用十分广泛，被称为CSS-Sprite，这种图称为雪碧图</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>雪碧图使用步骤<ol>\n<li>先确定要使用的图标</li>\n<li>测量图标的大小</li>\n<li>根据测量结果创建一个元素</li>\n<li>将雪碧图设置为元素的背景图片</li>\n<li>设置偏移量以显示正确的图片</li>\n</ol>\n</li>\n<li>渐变<ol>\n<li>通过渐变可以设置一些复杂的背景颜色，可以实现从一个颜色向其他颜色过渡的效果</li>\n<li>渐变是图片，需要通过background-image来设置</li>\n<li>线性渐变，颜色沿着一条直线发生变化 linear-gradient()</li>\n<li><code>background-image: linear-gradient(red,yellow);</code> 红色在开头，黄色在结尾，中间是过渡区域<ol>\n<li>线性渐变的开头，我们可以指定一个渐变的方向<ol>\n<li>to left</li>\n<li>to right</li>\n<li>to bottom</li>\n<li>to top</li>\n<li>xxxdeg deg表示旋转度数</li>\n<li><code>background-image: linear-gradient(to xx,red,yellow);</code></li>\n</ol>\n</li>\n<li>渐变可以同时指定多个颜色，多个颜色默认情况下平均分布，也可以手动指定渐变的分布情况</li>\n</ol>\n</li>\n<li><code>background-image: repeating-linear-gradient();</code> 可以平铺的线性渐变</li>\n<li>径向渐变（放射性的效果）<ol>\n<li><code>background-image: radial-gradient(red, yellow);</code></li>\n<li>默认情况下径向渐变的形状是根据元素的形状来计算的<ol>\n<li>正方形 –&gt; 圆形</li>\n<li>长方形 –&gt; 椭圆形</li>\n<li>我们也可以手动指定径向渐变的大小</li>\n<li>circle</li>\n<li>ellipse<ol>\n<li>也可以指定渐变的位置</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"9-动画\"><a href=\"#9-动画\" class=\"headerlink\" title=\"9. 动画\"></a>9. 动画</h2><ol>\n<li>设置网站的图标（在标题栏和收藏栏）<ol>\n<li>网站图片一般都存储在网站的根目录下，名字一般都叫做favicon.ico</li>\n<li>用法：<code>&lt;link rel=&quot;icon&quot; href=&quot;./favicon.ico&quot;&gt;</code></li>\n</ol>\n</li>\n<li>过渡（transition）<ol>\n<li>通过过渡可以指定一个属性发生变化时的切换方式</li>\n<li>通过过渡可以创建一些非常好的效果，提升用户的体验</li>\n<li>transition-property: 指定要执行过渡的属性<ol>\n<li>多个属性间使用’，’隔开</li>\n<li>如果所有属性都需要过渡，则使用all关键字</li>\n<li>大部分属性都支持过渡效果，注意过渡时必须是从一个有效数值向另外一个有效数值进行过渡</li>\n</ol>\n</li>\n<li>transition-duration: 指定过渡效果的持续时间<ol>\n<li>时间单位： s和ms 1s&#x3D;1000ms</li>\n</ol>\n</li>\n<li>transition-timing-function: 过渡的时序函数<ol>\n<li>指定过渡的执行的方式</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n","text":"HTML1. html文件结构<html></html><head></head> head是网页的头部，head中的内容不会在网页中直接出现，主要用来帮助浏览...","permalink":"/post/html-css学习笔记","photos":[],"count_time":{"symbolsCount":"18k","symbolsTime":"17 mins."},"categories":[],"tags":[{"name":"HTML","slug":"HTML","count":1,"path":"api/tags/HTML.json"},{"name":"CSS","slug":"CSS","count":1,"path":"api/tags/CSS.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#HTML\"><span class=\"toc-text\">HTML</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-html%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">1. html文件结构</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">&lt;html&gt;&lt;&#x2F;html&gt;</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#-1\"><span class=\"toc-text\">&lt;head&gt;&lt;&#x2F;head&gt;</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#-2\"><span class=\"toc-text\">&lt;body&gt;&lt;&#x2F;body&gt;</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E5%AE%9E%E4%BD%93\"><span class=\"toc-text\">2. 实体</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-meta%E6%A0%87%E7%AD%BE\"><span class=\"toc-text\">3. meta标签</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-%E8%AF%AD%E4%B9%89%E5%8C%96%E6%A0%87%E7%AD%BE\"><span class=\"toc-text\">4. 语义化标签</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-%E5%9D%97%E5%85%83%E7%B4%A0%E4%B8%8E%E8%A1%8C%E5%86%85%E5%85%83%E7%B4%A0\"><span class=\"toc-text\">5. 块元素与行内元素</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-%E8%B6%85%E9%93%BE%E6%8E%A5\"><span class=\"toc-text\">6. 超链接</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#7-%E5%9B%BE%E7%89%87%E6%A0%87%E7%AD%BE\"><span class=\"toc-text\">7. 图片标签</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#8-%E5%86%85%E8%81%94%E6%A1%86%E6%9E%B6\"><span class=\"toc-text\">8. 内联框架</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#9-%E9%9F%B3%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE\"><span class=\"toc-text\">9. 音视频播放</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#CSS\"><span class=\"toc-text\">CSS</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">1. 介绍</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E4%BD%BF%E7%94%A8css%E4%BF%AE%E6%94%B9%E5%85%83%E7%B4%A0%E7%9A%84%E6%A0%B7%E5%BC%8F\"><span class=\"toc-text\">2. 使用css修改元素的样式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-CSS%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95%EF%BC%9A\"><span class=\"toc-text\">3. CSS基本语法：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-%E5%B8%83%E5%B1%80\"><span class=\"toc-text\">4. 布局</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-%E5%AD%97%E4%BD%93\"><span class=\"toc-text\">5. 字体</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-%E8%A1%8C%E9%AB%98%EF%BC%88line-height%EF%BC%89\"><span class=\"toc-text\">6. 行高（line height）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#7-%E5%AD%97%E4%BD%93%E7%9A%84%E7%AE%80%E5%86%99%E5%B1%9E%E6%80%A7\"><span class=\"toc-text\">7. 字体的简写属性</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#8-%E8%83%8C%E6%99%AF%E5%9B%BE%E7%89%87\"><span class=\"toc-text\">8. 背景图片</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#9-%E5%8A%A8%E7%94%BB\"><span class=\"toc-text\">9. 动画</span></a></li></ol></li></ol>","author":{"name":"Connor Chen","slug":"blog-author","avatar":"","link":"/","description":"个人博客","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"eclipse安装activiti插件","uid":"d1f83b1c9dbba0efef7b237d0125d56c","slug":"eclipse安装activiti插件","date":"2024-09-29T02:24:04.000Z","updated":"2024-09-29T02:54:46.816Z","comments":true,"path":"api/articles/eclipse安装activiti插件.json","keywords":null,"cover":[],"text":"前言 网上搜索到的安装教程都不能用了，一直安装失败，想想也就放弃了，因为IDEA插件也能凑合，但是某些特定场景，只能用activiti插件去使用。 安装过程 H...","permalink":"/post/eclipse安装activiti插件","photos":[],"count_time":{"symbolsCount":281,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Eclipse","slug":"Eclipse","count":1,"path":"api/tags/Eclipse.json"}],"author":{"name":"Connor Chen","slug":"blog-author","avatar":"","link":"/","description":"个人博客","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{}}